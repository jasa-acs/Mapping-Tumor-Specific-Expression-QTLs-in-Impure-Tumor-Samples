
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> setwd("/Volumes/Moon/TCGA_BRCA/data/")
> 
> # ------------------------------------------------------------------------
> # read in eQTL results
> # ------------------------------------------------------------------------
> 
> pvs = read.table("eQTL_log_TReC_EA.txt", 
+   header=TRUE, sep="\t", as.is=TRUE)
> dim(pvs)
[1] 169743      5
> pvs[1:2,]
            SNP            gene    t.stat       p.value           FDR
1 SNP_A-8574551 ENSG00000247627  57.69972 5.968505e-226 8.036387e-216
2 SNP_A-8513384 ENSG00000226278 -51.60859 8.144064e-205 5.482851e-195
> 
> summary(pvs$p.value)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 1.703e-06 4.375e-06 4.493e-06 7.163e-06 1.000e-05 
> summary(pvs$FDR)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.5403  0.6941  0.6013  0.7576  0.7932 
> summary(pvs$p.value[pvs$FDR < 0.05])
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 0.000e+00 1.271e-11 4.363e-09 2.369e-09 4.180e-08 
> summary(pvs$FDR[pvs$p.value < 1e-9])
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 0.000e+00 9.900e-08 1.387e-04 5.813e-05 1.704e-03 
> 
> table(pvs$FDR < 0.2)

 FALSE   TRUE 
153130  16613 
> table(pvs$p.value < 1e-12)

 FALSE   TRUE 
164934   4809 
> table(pvs$p.value < 1e-9)

 FALSE   TRUE 
161842   7901 
> table(pvs$p.value < 1e-8)

 FALSE   TRUE 
160238   9505 
> 
> # ------------------------------------------------------------
> # read in SNP annotation 
> # ------------------------------------------------------------
> 
> setwd("/Users/suninsky/research/data/Affy/Affy6/anno/")
> 
> if(file.exists("affy6_snp_loci.txt")){
+   infoD = read.table("affy6_snp_loci.txt", sep="\t", header=TRUE, 
+                     as.is=TRUE, na.string="---")
+ }else{
+   info = read.csv("GenomeWideSNP_6.na32.annot.csv", as.is=TRUE, 
+                   comment.char="#")
+   dim(info)
+   info[1:2,1:4]
+ 
+   infoD = info[,1:4]
+   write.table(infoD, file = "affy6_snp_loci.txt", append = FALSE, 
+     quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
+ }
> 
> names(infoD)
[1] "Probe.Set.ID"      "dbSNP.RS.ID"       "Chromosome"       
[4] "Physical.Position"
> table(infoD$Chromosome)

    1    10    11    12    13    14    15    16    17    18    19     2    20 
73403 49592 45933 43797 35143 28939 26865 28622 21300 27213 12419 75842 23486 
   21    22     3     4     5     6     7     8     9    MT     X     Y 
12910 11951 62277 57556 57945 57818 48283 49992 42663   411 37902   860 
> summary(infoD$Physical.Position)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's 
      195  31590000  69710000  78600000 115600000 249200000      1846 
> 
> dim(infoD)
[1] 934968      4
> infoD[1:2,]
   Probe.Set.ID dbSNP.RS.ID Chromosome Physical.Position
1 SNP_A-1780419   rs6576700          1          84875173
2 SNP_A-1780418  rs17054099          5         156390980
> 
> # ------------------------------------------------------------
> # read in gene annotation 
> # ------------------------------------------------------------
> 
> setwd("/Users/suninsky/research/data/human/")
> 
> infoE = read.table("ens_gene_loci.txt", as.is=TRUE, sep="\t", header=TRUE)
> dim(infoE)
[1] 53561     4
> infoE[1:2,]
               id  chr    start      end
1 ENSG00000000003 chrX 99883667 99894988
2 ENSG00000000005 chrX 99839799 99854882
> table(infoE$chr)

 chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 chr20 
 5176  2197  3122  2750  1183  2181  2020  2179  2024   555  1929  3881  1277 
chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY 
  695  1191  2917  2494  2729  2790  2774  2318  2337  2328   514 
> 
> # ------------------------------------------------------------------------
> # read in location information and plot it
> # ------------------------------------------------------------------------
> 
> setwd("/Volumes/Moon/TCGA_BRCA/")
> 
> ptplot   = pvs[which(pvs$gene %in% infoE$id),]
> geneID   = match(ptplot$gene, infoE$id)
> markerID = match(ptplot$SNP,  infoD$Probe.Set.ID)
> scores   = ptplot$p.value
> scuts    = c(1e-9, 1e-14, 1e-19, 1e-24)
> cols     = c("green", "blue", "red", "black")
> eChr     = gsub("chr", "", infoE$chr)
> ePos     = 0.5*(infoE$start + infoE$end)
> mChr     = gsub("chr", "", infoD$Chromosome)
> mPos     = infoD$Physical.Position
> chroms   = 1:22
> 
> 
> source("codes_Wonil/eQTL_Plot.R")
> xlab="eQTL Location"; ylab="Transcript Location";
> plot.hotspots=TRUE; hotspots.cut=10; score.type="p-value"
> 
> png("figures/eQTL_logTReC_EA.png", width=7.5, height=9, res=200, units="in")
> eqtl.plot(geneID, markerID, scores, scuts, cols, eChr, ePos, mChr,
+ mPos, chroms, xlab="eQTL Location", ylab="Transcript Location",
+ plot.hotspots=TRUE, hotspots.cut=10, score.type="p-value")
> dev.off()
null device 
          1 
> 
> # ------------------------------------------------------------------------
> # check hotspots
> # ------------------------------------------------------------------------
> 
> tb = table(pvs$SNP[pvs$p.value<1e-9])
> table(tb)
tb
   1    2    3    4    5    6    7    8    9 
5650  493  144   52  102   14    2    1    1 
> 
> tb1 = tb[tb>10]
> tb1
named integer(0)
> 
> mat1 = match(names(tb1), infoD$Probe.Set.ID)
> 
> info1 = data.frame(infoD[mat1,], nEQTL=as.numeric(tb1))
> table(info1$Chromosome)
character(0)
> info1$Chromosome = as.numeric(info1$Chromosome)
> info1 = info1[order(info1$Chromosome, info1$Physical.Position),]
> info1
[1] Probe.Set.ID      dbSNP.RS.ID       Chromosome        Physical.Position
[5] nEQTL            
<0 rows> (or 0-length row.names)
> 
> genes = pvs$gene[pvs$SNP=="SNP_A-2223505" & pvs$p.value < 1e-9]
> cat(genes, sep="\n")

> 
> genes = pvs$gene[pvs$SNP=="SNP_A-2013353" & pvs$p.value < 1e-9]
> cat(genes, sep="\n")

> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 36.642   0.657  37.332 
