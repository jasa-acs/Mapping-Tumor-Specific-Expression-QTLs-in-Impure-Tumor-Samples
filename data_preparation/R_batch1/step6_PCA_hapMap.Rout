
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ------------------------------------------------------------
> # read data
> # ------------------------------------------------------------
> 
> setwd("/Volumes/Moon/TCGA_BRCA/data/")
> 
> dat = read.table("genotype_4_PCA_forward.txt", header=TRUE, 
+ 	na.strings="NN", as.is=TRUE)
> 
> dim(dat)
[1] 25842   667
> dat[1:2,1:5]
          rs alleles chrom    pos A0D9
1 rs10458597     C/T     1 564621   CC
2  rs2905036     C/T     1 792480   TT
> 
> table(dat$chrom)

   1   10   11   12   13   14   15   16   17   18   19    2   20   21   22    3 
1995 1384 1182 1195  986  837  768  805  811  787  601 1819  721  405  433 1527 
   4    5    6    7    8    9    X    Y 
1542 1513 1469 1275 1201 1113 1471    2 
> 
> # ------------------------------------------------------------
> # read CEU data
> # ------------------------------------------------------------
> 
> chrs = c(1:22, "X", "Y")
> 
> setwd("~/research/data/HapMap/genotypes_CEU/")
> 
> for(chr1 in chrs){
+   message(chr1, " ", date())
+   f1   = sprintf("genotypes_chr%s_CEU_r27_nr.b36_fwd.txt", chr1)
+   
+   ceuD = read.table(f1, as.is=TRUE, comment.char="", 
+ 									header=TRUE, na.strings="NN")
+   
+   if(chr1 == "1"){
+     datCEU = matrix("", nrow=nrow(dat), ncol=ncol(ceuD))
+     colnames(datCEU) = names(ceuD)
+   }
+   
+   snp2use = intersect(ceuD$rs, dat$rs)
+   mat1    = match(snp2use, dat$rs)
+   mat2    = match(snp2use, ceuD$rs)
+   ceuD    = as.matrix(ceuD)
+ 
+   datCEU[mat1,] = ceuD[mat2,]
+ }
1 Tue Oct 23 14:03:20 2012
2 Tue Oct 23 14:04:22 2012
3 Tue Oct 23 14:05:19 2012
4 Tue Oct 23 14:06:01 2012
5 Tue Oct 23 14:06:39 2012
6 Tue Oct 23 14:07:17 2012
7 Tue Oct 23 14:08:00 2012
8 Tue Oct 23 14:08:34 2012
9 Tue Oct 23 14:09:06 2012
10 Tue Oct 23 14:09:35 2012
11 Tue Oct 23 14:10:07 2012
12 Tue Oct 23 14:10:39 2012
13 Tue Oct 23 14:11:09 2012
14 Tue Oct 23 14:11:34 2012
15 Tue Oct 23 14:11:52 2012
16 Tue Oct 23 14:12:09 2012
17 Tue Oct 23 14:12:26 2012
18 Tue Oct 23 14:12:40 2012
19 Tue Oct 23 14:12:58 2012
20 Tue Oct 23 14:13:08 2012
21 Tue Oct 23 14:13:25 2012
22 Tue Oct 23 14:13:32 2012
X Tue Oct 23 14:13:41 2012
Y Tue Oct 23 14:14:00 2012
> 
> dim(datCEU)
[1] 25842   185
> datCEU[1:2,1:13]
     rs.          alleles chrom  pos         strand assembly.  center    
[1,] "rs10458597" "C/T"   "chr1" "   554484" "+"    "ncbi_b36" "perlegen"
[2,] "rs2905036"  "C/T"   "chr1" "   782343" "+"    "ncbi_b36" "perlegen"
     protLSID                                                  
[1,] "urn:lsid:perlegen.hapmap.org:Protocol:Genotyping_1.0.0:2"
[2,] "urn:lsid:perlegen.hapmap.org:Protocol:Genotyping_1.0.0:2"
     assayLSID                                           
[1,] "urn:lsid:perlegen.hapmap.org:Assay:25758.5632169:1"
[2,] "urn:lsid:perlegen.hapmap.org:Assay:25759.5533414:1"
     panelLSID                                       QCcode NA06984 NA06985
[1,] "urn:lsid:dcc.hapmap.org:Panel:CEPH-30-trios:1" "QC+"  NA      "CC"   
[2,] "urn:lsid:dcc.hapmap.org:Panel:CEPH-30-trios:1" "QC+"  NA      "TT"   
> table(datCEU[,3])

       chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 
   76  1995  1378  1183  1185   975   834   769   804   809   787   598  1823 
chr20 chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY 
  720   404   431  1523  1537  1511  1457  1270  1196  1109  1408    60 
> 
> nNA = colSums(is.na(datCEU))
> w2kp = which(nNA/nrow(datCEU) < 0.1)
> length(w2kp)
[1] 92
> 
> datCEU = datCEU[,w2kp]
> 
> # ------------------------------------------------------------
> # read YRI data
> # ------------------------------------------------------------
> 
> setwd("~/research/data/HapMap/genotypes_YRI/")
> 
> for(chr1 in chrs){
+   message(chr1, " ", date())
+   f1   = sprintf("genotypes_chr%s_YRI_r27_nr.b36_fwd.txt", chr1)
+   
+   yriD = read.table(f1, as.is=TRUE, comment.char="", 
+                     header=TRUE, na.strings="NN")
+   
+   if(chr1 == "1"){
+     datYRI = matrix("", nrow=nrow(dat), ncol=ncol(yriD))
+     colnames(datYRI) = names(yriD)
+   }
+   
+   snp2use = intersect(yriD$rs, dat$rs)
+   mat1    = match(snp2use, dat$rs)
+   mat2    = match(snp2use, yriD$rs)
+   yriD    = as.matrix(yriD)
+   
+   datYRI[mat1,] = yriD[mat2,]
+ }
1 Tue Oct 23 14:14:00 2012
2 Tue Oct 23 14:14:56 2012
3 Tue Oct 23 14:15:51 2012
4 Tue Oct 23 14:16:32 2012
5 Tue Oct 23 14:17:10 2012
6 Tue Oct 23 14:17:48 2012
7 Tue Oct 23 14:18:32 2012
8 Tue Oct 23 14:19:05 2012
9 Tue Oct 23 14:19:40 2012
10 Tue Oct 23 14:20:09 2012
11 Tue Oct 23 14:20:42 2012
12 Tue Oct 23 14:21:13 2012
13 Tue Oct 23 14:21:43 2012
14 Tue Oct 23 14:22:09 2012
15 Tue Oct 23 14:22:27 2012
16 Tue Oct 23 14:22:43 2012
17 Tue Oct 23 14:23:00 2012
18 Tue Oct 23 14:23:14 2012
19 Tue Oct 23 14:23:32 2012
20 Tue Oct 23 14:23:41 2012
21 Tue Oct 23 14:23:59 2012
22 Tue Oct 23 14:24:07 2012
X Tue Oct 23 14:24:16 2012
Y Tue Oct 23 14:24:35 2012
> 
> dim(datYRI)
[1] 25842   187
> datYRI[1:2,1:13]
     rs.          alleles chrom  pos         strand assembly.  center    
[1,] "rs10458597" "C/T"   "chr1" "   554484" "+"    "ncbi_b36" "perlegen"
[2,] "rs2905036"  "C/T"   "chr1" "   782343" "+"    "ncbi_b36" "sanger"  
     protLSID                                                   
[1,] "urn:lsid:perlegen.hapmap.org:Protocol:Genotyping_1.0.0:2" 
[2,] "urn:LSID:illumina.hapmap.org:Protocol:Human_1M_BeadChip:3"
     assayLSID                                           
[1,] "urn:lsid:perlegen.hapmap.org:Assay:25758.5632169:1"
[2,] "urn:LSID:sanger.hapmap.org:Assay:H1Mrs2905036:3"   
     panelLSID                                         QCcode NA18484 NA18485
[1,] "urn:LSID:dcc.hapmap.org:Panel:Yoruba-30-trios:1" "QC+"  NA      NA     
[2,] "urn:lsid:dcc.hapmap.org:Panel:Yoruba-60-trios:3" "QC+"  "TT"    "TT"   
> table(datYRI[,3])

       chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 
  315  1995  1342  1150  1159   963   819   748   784   790   774   587  1822 
chr20 chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY 
  701   393   427  1522  1538  1507  1461  1268  1198  1112  1407    60 
> 
> 
> nNA = colSums(is.na(datYRI))
> w2kp = which(nNA/nrow(datYRI) < 0.1)
> length(w2kp)
[1] 92
> 
> table(datYRI[,12],useNA="ifany")

       AA   AC   AG   AT   CC   CG   CT   GG   GT   TT <NA> 
 315 2963  243 1095  189 4502  301 1151 4579  268 3080 7156 
> datYRI = datYRI[,w2kp]
> 
> # ------------------------------------------------------------
> # read CHB data
> # ------------------------------------------------------------
> 
> setwd("~/research/data/HapMap/genotypes_CHB/")
> 
> for(chr1 in chrs){
+   message(chr1, " ", date())
+   f1   = sprintf("genotypes_chr%s_CHB_r27_nr.b36_fwd.txt", chr1)
+   
+   chbD = read.table(f1, as.is=TRUE, comment.char="", 
+                     header=TRUE, na.strings="NN")
+   
+   if(chr1 == "1"){
+     datCHB = matrix("", nrow=nrow(dat), ncol=ncol(chbD))
+     colnames(datCHB) = names(chbD)
+   }
+   
+   snp2use = intersect(chbD$rs, dat$rs)
+   mat1    = match(snp2use, dat$rs)
+   mat2    = match(snp2use, chbD$rs)
+   chbD    = as.matrix(chbD)
+   
+   datCHB[mat1,] = chbD[mat2,]
+ }
1 Tue Oct 23 14:24:35 2012
2 Tue Oct 23 14:25:07 2012
3 Tue Oct 23 14:25:44 2012
4 Tue Oct 23 14:26:11 2012
5 Tue Oct 23 14:26:34 2012
6 Tue Oct 23 14:26:59 2012
7 Tue Oct 23 14:27:27 2012
8 Tue Oct 23 14:27:47 2012
9 Tue Oct 23 14:28:08 2012
10 Tue Oct 23 14:28:26 2012
11 Tue Oct 23 14:28:46 2012
12 Tue Oct 23 14:29:06 2012
13 Tue Oct 23 14:29:24 2012
14 Tue Oct 23 14:29:40 2012
15 Tue Oct 23 14:29:52 2012
16 Tue Oct 23 14:30:02 2012
17 Tue Oct 23 14:30:12 2012
18 Tue Oct 23 14:30:21 2012
19 Tue Oct 23 14:30:33 2012
20 Tue Oct 23 14:30:38 2012
21 Tue Oct 23 14:30:48 2012
22 Tue Oct 23 14:30:53 2012
X Tue Oct 23 14:30:58 2012
Y Tue Oct 23 14:31:10 2012
> 
> dim(datCHB)
[1] 25842    97
> datCHB[1:2,1:13]
     rs.          alleles chrom  pos         strand assembly.  center    
[1,] "rs10458597" "C/T"   "chr1" "   554484" "+"    "ncbi_b36" "broad"   
[2,] "rs2905036"  "C/T"   "chr1" "   782343" "+"    "ncbi_b36" "perlegen"
     protLSID                                                     
[1,] "urn:LSID:affymetrix.hapmap.org:Protocol:GenomeWideSNP_6.0:3"
[2,] "urn:lsid:perlegen.hapmap.org:Protocol:Genotyping_1.0.0:2"   
     assayLSID                                           
[1,] "urn:LSID:broad.hapmap.org:Assay:SNP_A-8575125:3"   
[2,] "urn:lsid:perlegen.hapmap.org:Assay:25759.5533414:1"
     panelLSID                                     QCcode NA18524 NA18526
[1,] "urn:lsid:dcc.hapmap.org:Panel:Han_Chinese:4" "QC+"  "CC"    "CC"   
[2,] "urn:lsid:dcc.hapmap.org:Panel:Han_Chinese:2" "QC+"  "TT"    "TT"   
> table(dat$chrom[datCHB[,3]==""])

 1 10 11 12 13 15 16 17 18 19 20 21  3  4  5  6  7  8  9  X 
 3  1  1  7  4  1  3  2  2  1  1  2  2  4  4 12  4  4  2  3 
> 
> nNA = colSums(is.na(datCHB))
> w2kp = which(nNA/nrow(datCHB) < 0.1)
> length(w2kp)
[1] 54
> 
> table(datCHB[,16],useNA="ifany")

         AA    AC    AG    AT    CC    CG    CT    GG    GT    TT  <NA> 
   63  2113   183   800   127  3076   208   747  3028   178  2080 13239 
> datCHB = datCHB[,w2kp]
> 
> # ------------------------------------------------------------
> # find intersection
> # ------------------------------------------------------------
> 
> dim(dat)
[1] 25842   667
> snp2use = intersect(dat$rs, datCEU[,1])
> length(snp2use)
[1] 25766
> 
> snp2use = intersect(snp2use, datYRI[,1])
> length(snp2use)
[1] 25474
> 
> snp2use = intersect(snp2use, datCHB[,1])
> length(snp2use)
[1] 25445
> 
> which(snp2use == "")
integer(0)
> 
> # ------------------------------------------------------------
> # merge them into one dataset
> # ------------------------------------------------------------
> 
> table(datCEU[,5])

          + 
   76 25766 
> table(datYRI[,5])

          + 
  315 25527 
> table(datCHB[,5])

          + 
   63 25779 
> 
> dTCGA = dat[match(snp2use, dat$rs),]
> dCEU  = datCEU[match(snp2use, datCEU[,1]),]
> dYRI  = datYRI[match(snp2use, datYRI[,1]),]
> dCHB  = datCHB[match(snp2use, datCHB[,1]),]
> 
> dim(dTCGA)
[1] 25445   667
> dim(dCEU)
[1] 25445    92
> dim(dYRI)
[1] 25445    92
> dim(dCHB)
[1] 25445    54
> 
> all(dCEU[,1] == dTCGA$rs)
[1] TRUE
> all(dCEU[,1] == dYRI[,1])
[1] TRUE
> all(dCEU[,1] == dCHB[,1])
[1] TRUE
> 
> table(dTCGA$alleles, dCEU[,2])
     
       A/C  A/G  A/T  C/G  C/T  G/T
  A/C 1053    0    0    0    0    1
  A/G    0 4196    0    0    2    0
  A/T    0    0  787    0    0    0
  C/A  881    0    0    0    0    3
  C/G    0    0    0 1197    0    0
  C/T    0    4    0    0 4622    0
  G/A    0 4690    0    0    6    0
  G/C    0    0    0 1166    0    0
  G/T    1    0    0    0    0  825
  T/A    0    0  730    0    0    0
  T/C    0    5    0    0 4204    0
  T/G    2    0    0    0    0 1070
> table(dCEU[,2], dYRI[,2])
     
       A/C  A/G  A/T  C/G  C/T  G/T
  A/C 1937    0    0    0    0    0
  A/G    0 8895    0    0    0    0
  A/T    0    0 1517    0    0    0
  C/G    0    0    0 2363    0    0
  C/T    0    0    0    0 8834    0
  G/T    0    0    0    0    0 1899
> table(dCEU[,2], dCHB[,2])
     
       A/C  A/G  A/T  C/G  C/T  G/T
  A/C 1937    0    0    0    0    0
  A/G    0 8895    0    0    0    0
  A/T    0    0 1517    0    0    0
  C/G    0    0    0 2363    0    0
  C/T    0    0    0    0 8834    0
  G/T    0    0    0    0    0 1899
> 
> mD = cbind(dTCGA[,-(1:4)], dCEU[,-(1:11)], dYRI[,-(1:11)], dCHB[,-(1:11)])
> mD = as.matrix(mD)
> dim(mD)
[1] 25445   868
> 
> lab = c(rep("TCGA",ncol(dTCGA)-4), rep("CEU", ncol(dCEU)-11))
> lab = c(lab, rep("YRI",ncol(dYRI)-11), rep("CHB", ncol(dCHB)-11))
> table(lab)
lab
 CEU  CHB TCGA  YRI 
  81   43  663   81 
> 
> nNA = colSums(is.na(mD))
> summary(nNA)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    7.0    66.0   103.0   178.5   192.2  1360.0 
> 
> # ------------------------------------------------------------
> # row by row, fix it
> # ------------------------------------------------------------
> 
> alleles = as.character(dTCGA$alleles)  
> alleles = strsplit(alleles, "/")
> n.allel = sapply(alleles, length)
> table(n.allel)
n.allel
    2 
25445 
> 
> ## numerical version of genotype data
> nDat = matrix(NA, nrow=nrow(mD), ncol=ncol(mD))
> colnames(nDat) = colnames(mD)
> 
> for(i in 1:nrow(mD)){
+ 	
+   if(i %% 10000 == 0){
+     cat(i, date(), "\n")	
+   }
+ 
+   pdrow = mD[i,]
+ 
+   a1 = alleles[[i]][1]
+   a2 = alleles[[i]][2]
+ 
+   g1 = paste(a1, a1, sep="")
+   g2 = paste(a1, a2, sep="")
+   g3 = paste(a2, a2, sep="")
+   g4 = paste(a2, a1, sep="")
+         
+   which.g1 = which(pdrow==g1)
+   which.g2 = which(pdrow==g2 | pdrow==g4)
+   which.g3 = which(pdrow==g3)
+   which.na = which(is.na(pdrow))
+ 
+   len.g1 = length(which.g1)
+   len.g2 = length(which.g2)
+   len.g3 = length(which.g3)
+   len.na = length(which.na)	
+ 
+   if(len.g1 + len.g2 + len.g3 + len.na != ncol(mD)){
+     next
+   }
+ 
+   nDat[i, which.g2] = 1
+ 
+   if(len.g1 >= len.g3){
+     nDat[i, which.g1] = 0
+     nDat[i, which.g3] = 2
+   }else{
+     nDat[i, which.g1] = 2
+     nDat[i, which.g3] = 0
+   }
+ 
+ }
10000 Tue Oct 23 14:31:22 2012 
20000 Tue Oct 23 14:31:25 2012 
> 
> nNA = rowSums(is.na(nDat))
> summary(nNA)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0     0.0     2.0     6.9     8.0   868.0 
> 
> w2kp = which(nNA < ncol(nDat)*0.05 )
> length(w2kp)
[1] 25412
> 
> dim(nDat)
[1] 25445   868
> nDat = nDat[w2kp,]
> dim(nDat)
[1] 25412   868
> 
> # ------------------------------------------------------------
> # PCA together with HapMap samples
> # ------------------------------------------------------------
> 
> dim(nDat)
[1] 25412   868
> nDat[1:2,1:5]
     A0D9 A0DB A13G A0AU A0AY
[1,]    0    0    0    0    0
[2,]    0    0    0    0    0
> 
> table(lab)
lab
 CEU  CHB TCGA  YRI 
  81   43  663   81 
> datR14Pr = nDat - rowMeans(nDat, na.rm=TRUE)
> 
> datR14Pr[is.na(datR14Pr)] = 0 
> covdatR1 = t(datR14Pr) %*% datR14Pr / nrow(datR14Pr)
> dim(covdatR1)
[1] 868 868
> prdatR1  = eigen(covdatR1)
> 
> prdatR1$values[1:10]
 [1] 4.4771502 2.3149279 0.3163706 0.2770643 0.2678630 0.2600091 0.2587431
 [8] 0.2556989 0.2528914 0.2515172
> 
> PC1 =  prdatR1$vectors[,1]
> PC2 =  prdatR1$vectors[,2]
> 
> setwd("/Volumes/Moon/TCGA_BRCA/figures/")
> 
> pdf("PCs_withHapMap.pdf", width=6, height=3)
> par(mar=c(5,4,1,1), mfrow=c(1,2))
> barplot(prdatR1$values[1:10], main="", 
+   xlab="Index", ylab="Eigen-value")
> 
> w0 = which(lab == "TCGA")
> w1 = which(lab == "CEU")
> w2 = which(lab == "YRI")
> w3 = which(lab == "CHB")
> 
> par(mar=c(5,4,1,1))
> plot(PC1, PC2, type="n", bty="n")
> points(PC1[w1], PC2[w1], col="darkred",   pch=19, cex=0.6)
> points(PC1[w2], PC2[w2], col="darkgreen", pch=0,  cex=0.6)
> points(PC1[w3], PC2[w3], col="darkblue",  pch=1,  cex=0.6)
> points(PC1[w0], PC2[w0], col="black",     pch=3,  cex=0.4)
> legend("topright", c("TCGA", "CEU", "YRI", "CHB"), pch=c(3,19,0,1), bty="n", 
+ 	col=c("black", "darkred", "darkgreen", "darkblue"))
> 
> abline(h=0.00, col="grey")
> abline(v=0.00, col="grey")
> 
> dev.off()
null device 
          1 
> 
> table(lab[PC1 > 0.08])

YRI 
 81 
> table(lab[PC2 > 0.08])

 CHB TCGA 
  43   39 
> 
> table(PC1 < 0.01, PC2 < 0.01)
       
        FALSE TRUE
  FALSE     1  132
  TRUE     95  640
> table(lab[PC1 < 0.01 & PC2 < 0.01])

 CEU TCGA 
  81  559 
> 
> table(PC1 < 0.0, PC2 < 0.0)
       
        FALSE TRUE
  FALSE    69  133
  TRUE     34  632
> table(lab[PC1 < 0.0 & PC2 < 0.0])

 CEU TCGA 
  81  551 
> 
> # ------------------------------------------------------------
> # write out PCA results
> # ------------------------------------------------------------
> 
> setwd("/Volumes/Moon/TCGA_BRCA/data/")
> 
> colnames(prdatR1$vectors) = paste("PC", 1:ncol(prdatR1$vectors), sep="")
> 
> pcDat = cbind(colnames(nDat), lab, prdatR1$vectors[,1:10])
> colnames(pcDat)[1] = "sample"
> dim(pcDat)
[1] 868  12
> pcDat[1:2,1:5]
     sample lab    PC1                   PC2                  
[1,] "A0D9" "TCGA" "-0.0162718022968862" "-0.0139067401468865"
[2,] "A0DB" "TCGA" "-0.0175437618009054" "-0.0116077702177521"
     PC3                    
[1,] "0.00121170545542691"  
[2,] "-4.59940073294497e-05"
> 
> write.table(pcDat, file = "PCs_with_hapmap_samples.txt", 
+   append = FALSE, quote = FALSE, sep = "\t", row.names = FALSE,
+   col.names = TRUE)
> 
> # ------------------------------------------------------------
> # Run PCA only use the Caucasian TCGA samples 
> # ------------------------------------------------------------
> 
> w2use   = (lab=="TCGA" & PC1 < 0.0 & PC2 < 0.0)
> sam2use = colnames(nDat)[w2use]
> length(sam2use)
[1] 551
> 
> datR14Pr = nDat[,w2use] - rowMeans(nDat[,w2use], na.rm=TRUE)
> 
> datR14Pr[is.na(datR14Pr)] = 0 
> covdatR1 = t(datR14Pr) %*% datR14Pr / nrow(datR14Pr)
> dim(covdatR1)
[1] 551 551
> prdatR1  = eigen(covdatR1)
> 
> prdatR1$values[1:20]
 [1] 0.2219682 0.1723126 0.1556381 0.1313053 0.1219486 0.1187937 0.1182978
 [8] 0.1179375 0.1169465 0.1168900 0.1165444 0.1160468 0.1155165 0.1146472
[15] 0.1139781 0.1139085 0.1135155 0.1129103 0.1127757 0.1121424
> 
> PC1 =  prdatR1$vectors[,1]
> PC2 =  prdatR1$vectors[,2]
> PC3 =  prdatR1$vectors[,3]
> 
> setwd("/Volumes/Moon/TCGA_BRCA/figures/")
> 
> pdf("PCs_Caucasian_without_HapMap.pdf", width=6, height=6)
> par(mar=c(5,4,1,1), mfrow=c(2,2))
> barplot(prdatR1$values[1:20], main="", 
+ xlab="Index", ylab="Eigen-value")
> 
> par(mar=c(5,4,1,1))
> plot(PC1, PC2,  bty="n")
> plot(PC1, PC3,  bty="n")
> plot(PC2, PC3,  bty="n")
> 
> dev.off()
null device 
          1 
> 
> # ------------------------------------------------------------
> # read in covaraites 
> # ------------------------------------------------------------
> 
> setwd("/Volumes/Moon/TCGA_BRCA/info/")
> 
> sam = read.table("brca_samples2use_after_qc_female.txt", 
+ header=TRUE, sep="\t", as.is=TRUE)
> dim(sam)
[1] 663  23
> sam[1,]
  DNAtumor_institution DNAtumor_patientID DNAtumor_type DNAtumor_portion
1                   A7               A0D9           01A              31D
  DNAtumor_plate                                   DNAtumor_arrayFile
1           A059 BITES_p_TCGAb61_SNP_S_GenomeWideSNP_6_H07_697072.CEL
  DNAnorml_institution DNAnorml_patientID DNAnorml_type DNAnorml_portion
1                   A7               A0D9           10A              01D
  DNAnorml_plate                                   DNAnorml_arrayFile
1           A059 BITES_p_TCGAb61_SNP_S_GenomeWideSNP_6_E10_697070.CEL
                     RNA_Exome             RNA_RNAseq.Tumor
1 TCGA-A7-A0D9-01A-31W-A071-09 TCGA-A7-A0D9-01A-31R-A056-07
             RNA_RNAseq.Normal              RNA_rnaseqID.Tumor
1 TCGA-A7-A0D9-11A-53R-A089-07 110318_SN749_0046_AB039FABXX_4_
                   RNA_rnaseqID.Normal RNA_institution RNA_patientID RNA_type
1 110909_UNC9-SN296_0240_BD0DDBABXX_1_              A7          A0D9      01A
  RNA_portion RNA_plate gender
1         31R      A056 female
> 
> sam = sam[match(sam2use, sam$DNAnorml_patientID),]
> all(sam2use == sam$DNAnorml_patientID)
[1] TRUE
> 
> 
> pvals = matrix(NA, nrow=20, ncol=4)
> 
> for(i in 1:20){
+   PCi = prdatR1$vectors[,i]
+   ai  = anova(lm(PCi ~  as.factor(sam$DNAnorml_plate) 
+                       + as.factor(sam$DNAnorml_institution)
+                       + as.factor(sam$DNAnorml_type)
+                       + as.factor(sam$DNAnorml_portion)))
+   pvals[i,] = ai$Pr[1:4]
+ 
+ }
> 
> cbind(signif(prdatR1$values[1:20]), signif(pvals,3))
          [,1]     [,2]     [,3]  [,4]   [,5]
 [1,] 0.221968 3.44e-07 7.41e-01 0.459 0.1640
 [2,] 0.172313 9.51e-05 2.54e-01 0.924 1.0000
 [3,] 0.155638 1.10e-34 5.96e-48 0.603 0.1730
 [4,] 0.131305 2.93e-13 1.24e-08 0.573 0.2590
 [5,] 0.121949 3.21e-07 6.93e-01 0.397 0.9620
 [6,] 0.118794 1.26e-11 5.72e-02 0.359 0.3780
 [7,] 0.118298 2.75e-02 1.81e-01 0.385 0.4870
 [8,] 0.117937 2.02e-01 1.37e-01 0.417 0.5130
 [9,] 0.116946 4.02e-01 7.99e-01 0.945 0.4610
[10,] 0.116890 1.02e-04 4.07e-01 0.986 0.0935
[11,] 0.116544 8.10e-04 7.24e-01 0.838 0.2580
[12,] 0.116047 6.68e-01 2.21e-01 0.476 0.0586
[13,] 0.115517 3.64e-02 5.45e-01 0.797 0.3320
[14,] 0.114647 5.53e-01 7.79e-01 0.202 0.3590
[15,] 0.113978 4.43e-01 1.17e-01 0.578 0.0158
[16,] 0.113909 7.55e-02 5.94e-01 0.612 0.6020
[17,] 0.113516 7.71e-02 7.46e-01 0.497 0.9840
[18,] 0.112910 2.42e-01 6.42e-01 0.972 0.7530
[19,] 0.112776 1.75e-03 4.83e-02 0.678 0.4830
[20,] 0.112142 1.87e-01 9.63e-01 0.102 0.7330
> 
> table(sam$DNAnorml_plate)

A012 A037 A059 A087 A107 A10L A111 A113 A12A A12N A134 A13N A141 A14F A14J A160 
  63   73   33   36   29   14    1   39   32   28    9   50   23   17   26   22 
A166 A16C 
  38   18 
> table(sam$DNAnorml_institution)

 A1  A2  A7  A8  AC  AN  AO  AQ  AR  B6  BH  D8  E2  E9  EW  GI 
  8  57  13  64   2  29  27   5  48  31 108  59  45  42  12   1 
> table(sam$DNAnorml_plate, sam$DNAnorml_institution)
      
       A1 A2 A7 A8 AC AN AO AQ AR B6 BH D8 E2 E9 EW GI
  A012  0  1  5 49  0  5  0  0  0  0  3  0  0  0  0  0
  A037  0 15  0 12  0 16  9  1  0 12  8  0  0  0  0  0
  A059  0  1  1  2  0  0  6  0  0  3 20  0  0  0  0  0
  A087  4 11  0  1  0  0  1  0  7  7  5  0  0  0  0  0
  A107  0  9  0  0  0  7  0  0  5  4  4  0  0  0  0  0
  A10L  0  1  0  0  0  1  5  1  0  1  0  0  5  0  0  0
  A111  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
  A113  1  8  1  0  0  0  3  0  3  2 12  6  3  0  0  0
  A12A  0  0  0  0  0  0  0  0  1  0 16  0 15  0  0  0
  A12N  0  0  0  0  0  0  0  0 11  0 12  0  5  0  0  0
  A134  0  0  0  0  0  0  0  0  1  0  6  0  2  0  0  0
  A13N  0  6  1  0  0  0  2  2  0  2 14 17  4  0  2  0
  A141  3  0  0  0  0  0  1  0  0  0  0  0  7  3  9  0
  A14F  0  1  0  0  0  0  0  0  0  0  1  6  3  6  0  0
  A14J  0  0  0  0  0  0  0  1  0  0  2 16  0  6  1  0
  A160  0  0  0  0  1  0  0  0  0  0  2  3  1 15  0  0
  A166  0  2  5  0  1  0  0  0 20  0  1  0  0  9  0  0
  A16C  0  2  0  0  0  0  0  0  0  0  1 11  0  3  0  1
> 
> # ------------------------------------------------------------
> # write the new sample list 
> # ------------------------------------------------------------
> 
> write.table(sam, file = "brca_samples2use_after_qc_female_caucasian.txt", 
+ append = FALSE, quote = FALSE, sep = "\t", row.names = FALSE,
+ col.names = TRUE)
> 
> 
> proc.time()
    user   system  elapsed 
1629.768  121.449 1752.005 
